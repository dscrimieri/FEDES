{interpolations}

procedure SetNumOfThreads(NumOfThreads: integer); external 'libfedes';

 procedure DMUFPP(const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';

 procedure NPMP(  const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';

 procedure DMUEP (const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Elements1 : TIntegerIntegerArray;
                 const NodesInElement : array of integer;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';
 procedure MUESFP(const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Elements1 : TIntegerIntegerArray;
                 const NodesInElement : array of integer;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';


 procedure DMUFP(const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';

 procedure NPM(  const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';

 procedure DMUE (const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Elements1 : TIntegerIntegerArray;
                 const NodesInElement : array of integer;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';
 procedure MUESF(const ScaleFactorStress : real;
                 const ScaleFactorDisplacements: real;
                 const ScaleFactorTotalStrain: real;
                 const ScaleFactorPlasticStrain: real;
                 const ScaleFactorAccumulatedStrain : real;
                 const nodes1:TRealRealArray;
                 const nodes2:TRealRealArray;
                 const Elements1 : TIntegerIntegerArray;
                 const NodesInElement : array of integer;
                 const Stress1 : TRealRealArray;
                 const Displacements1 : TRealRealArray;
                 const TotalStrain1 : TRealRealArray;
                 const PlasticStrain1 : TRealRealArray;
                 const AccumulatedStrain1 : TRealRealArray;
                 var Stress2 : TRealRealArray;             const StressMapping : boolean;
                 var Displacements2 : TRealRealArray;      const DisplacementMapping : boolean;
                 var TotalStrain2 : TRealRealArray;        const TotalStrainMapping : boolean;
                 var PlasticStrain2 : TRealRealArray;      const PlasticStrainMapping : boolean;
                 var AccumulatedStrain2 : TRealRealArray;  const AccumulatedStrainMapping : boolean); external 'libfedes';

 //========================= ABAQUS Explicit ==================================================
 procedure convert_coordinates(var nodes2 : TRealRealArray;
                              const nodes1 : TRealRealArray;
                              const elements1: TIntegerIntegerArray); external 'libfedes';
 procedure obtain_nodes_in_element(const Elements : TIntegerIntegerArray; var NodesInElement : TIntegerArray); external 'libfedes';
 //procedure convert_stresses(var s2_11,s2_22,s2_33,s2_12,s2_23,s2_13:TRealArray; const s1_11,s1_22,s1_33,s1_12,s1_23,s1_13: array of real;const elements1: TIntegerIntegerArray);

  {parsers}
procedure FortranNPM(const path : string;
                     const ScaleFactor : string;
                     const Nodes : TRealRealArray;
                     const Stresses : TRealRealArray;
                     const AccumulatedStrain : TrealRealArray); external 'libfedes';
procedure FortranDMUFP(const path : string;
                       const ScaleFactor : string;
                       const Nodes : TRealRealArray;
                       const Stresses : TRealRealArray;
                       const AccumulatedStrain : TrealRealArray); external 'libfedes';
procedure FortranDMUE (const path : string;
                       const ScaleFactor : string;
                       const Nodes : TRealRealArray;
                       const Elements : TIntegerIntegerArray;
                       const NodesInElement : TIntegerArray;
                       const Stresses : TRealRealArray;
                       const AccumulatedStrain : TrealRealArray); external 'libfedes';
procedure FortranMUESF(const path : string;
                       const ScaleFactor : string;
                       const Nodes : TRealRealArray;
                       const Elements : TIntegerIntegerArray;
                       const NodesInElement : TIntegerArray;
                       const Stresses : TRealRealArray;
                       const AccumulatedStrain : TrealRealArray); external 'libfedes';
procedure CreateFortranAbaqusFile(const filename1: string;
                                  const filename2: string;
                                  const Nodes : TRealRealArray;
                                  const Displacements : TRealRealArray;
                                  const Stresses : TRealRealArray;
                                  const AccumulatedStrain : TRealRealArray); external 'libfedes';
procedure CreateAbaqusFile(const filename1: string;
                           const filename2: string;
                           const Nodes : TRealRealArray;
                           const Elements : TIntegerIntegerArray;
                           const Stresses : TRealRealArray;
                           const Displacements : TRealRealArray;
                           const TotalStrains : TRealRealArray;
                           const PlasticStrains : TRealRealArray;
                           const AccumulatedStrains : TRealRealArray); external 'libfedes';
procedure createXML2(const filename:string;
                    const Nodes : TRealRealArray;
                    const Elements: TIntegerIntegerArray;
                    const NodesInElement : TIntegerArray;
                    const Stresses : TRealRealArray;
                    const Displacements : TRealRealArray;
                    const TotalStrains : TRealRealArray;
                    const PlasticStrains : TRealRealArray;
                    const AccumulatedStrains : TRealRealArray); external 'libfedes';

procedure createXML1(const filename:string;
                    const Nodes : TRealRealArray;
                    const Elements: TIntegerIntegerArray;
                    const NodesInElement : TIntegerArray;
                    const Stresses : TRealRealArray;
                    const Displacements : TRealRealArray;
                    const TotalStrains : TRealRealArray;
                    const PlasticStrains : TRealRealArray;
                    const AccumulatedStrains : TRealRealArray); external 'libfedes';

procedure CreateAnsysFiles(const filename: string;
                           const Nodes : TRealRealArray;
                           const NodesInIntegration :  TRealRealArray;
                           const Elements: TIntegerIntegerArray;
                           const NodesInElement : TIntegerArray;
                           const Stresses : TRealRealArray;
                           const Displacements : TRealRealArray;
                           const TotalStrains : TRealRealArray;
                           const PlasticStrains : TRealRealArray;
                           const AccumulatedStrains : TRealRealArray); external 'libfedes';
procedure CreateDeformFile(const filename1: string;
                            const filename2: string;
                            const Nodes : TRealRealArray;
                            const Elements: TIntegerIntegerArray;
                            const NodesInElement : TIntegerArray;
                            const Stresses : TRealRealArray;
                            const Displacements : TRealRealArray;
                            const TotalStrains : TRealRealArray;
                            const PlasticStrains : TRealRealArray;
                            const AccumulatedStrains : TRealRealArray); external 'libfedes';
procedure CreateMorpheoFile(const filename1: string;
                            const filename2: string;
                            const Nodes : TRealRealArray;
                            const Elements: TIntegerIntegerArray;
                            const NodesInElement : TIntegerArray;
                            const Stresses : TRealRealArray;
                            const Displacements : TRealRealArray;
                            const TotalStrains : TRealRealArray;
                            const PlasticStrains : TRealRealArray;
                            const AccumulatedStrains : TRealRealArray); external 'libfedes';

  {readers}
//==================== reading Abaqus input file .inp ==========================
procedure abaqus_input_read(const str : string;
                            var nodes:TRealRealArray;
//                            var len: integer;
                            var elements:TIntegerIntegerArray); external 'libfedes';
//===================== reading Abaqus output file .dat ========================
 procedure abaqus_output_read(const str_ : string;
                             const l: integer;
                             var Stress:TRealRealArray;
                             var Displacement:TRealRealArray;
                             var TotalStrain:TRealRealArray;
                             var PlasticStrain:TRealRealArray;
                             var AccumulatedStrain:TRealRealArray); external 'libfedes';
 procedure ansys_input_read(const str : string;
                            var  Nodes:TRealRealArray;
                            var  Elements : TIntegerIntegerArray); external 'libfedes';
 procedure ansys_input_read_lis(const str : string;
                                var  Nodes:TRealRealArray;
                                var  Elements : TIntegerIntegerArray); external 'libfedes';
 procedure ansys_input_integration_points_read(const str : string;
                                               var  Nodes:TRealRealArray); external 'libfedes';
//===================== Ansys Output File .txt =================================
 procedure ansys_output_read(const str : string;
                             const TheLength : integer;
                             var  Displacements:TRealRealArray;
                             var  TotalStrains:TRealRealArray;
                             var  Stresses:TRealRealArray); external 'libfedes';
 //======================== MARC input file .t19 ================================
procedure marc_input_output_read(const str_ : string;
                                 var  Nodes:TRealRealArray;
                                 var  Elements : TIntegerIntegerArray;
                                 var  Displacements:TRealRealArray); external 'libfedes';
procedure marc_stress_output_read(const str : string;
                                  var  Stresses:TRealRealArray); external 'libfedes';
procedure deform_input_output_read(const str_ : string;
                                   var Nodes : TRealRealArray;
                                   var Elements : TIntegerIntegerArray;
                                   var Stresses:TRealRealArray;
                                   var Displacements:TRealRealArray;
                                   var AccumulatedPlasticStrain:TRealRealArray); external 'libfedes';
procedure deform_input_read(const str_ : string;
                            var Nodes : TRealRealArray;
                            var Elements : TIntegerIntegerArray); external 'libfedes';
procedure vulcan_input_read (const str_ : string;
                                   var Nodes : TRealRealArray;
                                   var Elements : TIntegerIntegerArray); external 'libfedes';
procedure vulcan_output_read (const str_ : string;
                              var Stresses:TRealRealArray;
                              var Displacements:TRealRealArray); external 'libfedes';
procedure morpheo_input_output_read(XMLDocument1: TXMLDocument;
                                    const str_ : string;
                                    var Nodes : TRealRealArray;
                                    var Elements : TIntegerIntegerArray;
                                    var Stresses:TRealRealArray;
                                    var Displacements:TRealRealArray;
                                    var TotalStrains:TRealRealArray;
                                    var AccumulatedStrain:TRealRealArray); external 'libfedes';
procedure morpheo_input_read(XMLDocument1: TXMLDocument;
                            const str_ : string;
                            var Nodes : TRealRealArray;
                            var Elements : TIntegerIntegerArray); external 'libfedes';
procedure XML_input_read (const str_: string;
                          Displacements:TRealRealArray); external 'libfedes';

